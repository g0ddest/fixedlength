buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'maven'
    id 'maven-publish'
    id 'java'
    id 'checkstyle'
    id 'me.champeau.jmh' version '0.6.6'
    id 'signing'
    id 'jacoco'
}

group 'name.velikodniy.vitaliy'
version '0.10'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

checkstyle {
    sourceSets = [ project.sourceSets.main ]
    checkstyleMain.exclude '**/jmh/**'
}


signing {
    def signingKey = System.getenv('SIGNING_KEY')
    def signingPassword = System.getenv('SIGNING_PASSWORD')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign configurations.archives
}

// Github publishing
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/g0ddest/fixedlength")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

// Maven Central publish
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getenv("OSSRH_USERNAME"), password: System.getenv("OSSRH_PASSWORD"))
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.getenv("OSSRH_USERNAME"), password: System.getenv("OSSRH_PASSWORD"))
            }

            pom.project {

                name = 'fixedlength'
                packaging 'jar'
                description = 'Fast simple zero-dependency Java library to parse fixed length files'
                url = 'https://github.com/g0ddest/fixedlength'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://github.com/g0ddest/fixedlength/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'g0ddest'
                        name = 'Vitalii Velicodn√Æi'
                        email = 'vitaliy@velikodniy.name'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/g0ddest/fixedlength.git'
                    developerConnection = 'scm:git:ssh://git@github.com:g0ddest/fixedlength.git'
                    url = "https://github.com/g0ddest/fixedlength.git"
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
